#
# TODO: workspace or cache for build/test workflows
#       https://circleci.com/docs/2.0/jobs-steps/

version: 2
jobs:
  build_stable:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -t ansible_xenial           ubuntu16.04
            docker build  -t ansible_trusty           ubuntu14.04
            docker build  -t ansible_stretch          debian9
            docker build  -t ansible_jessie           debian8
            docker build  -t ansible_centos7          centos7
            docker build  -t ansible_alpine3          alpine3

      - run:
          name: Validating the test results
          command: |
            docker run -i ansible_xenial           > result-ubuntu16.04
            docker run -i ansible_trusty           > result-ubuntu14.04
            docker run -i ansible_stretch          > result-debian9
            docker run -i ansible_jessie           > result-debian8
            docker run -i ansible_centos7          > result-centos7
            docker run -i ansible_alpine3          > result-alpine3

            sh -c "[ -s result-ubuntu16.04         ]"
            sh -c "[ -s result-ubuntu14.04         ]"
            sh -c "[ -s result-debian9             ]"
            sh -c "[ -s result-debian8             ]"
            sh -c "[ -s result-centos7             ]"
            sh -c "[ -s result-alpine3             ]"


  build_stable_onbuild:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -t ansible_xenial_onbuild   ubuntu16.04-onbuild
            docker build  -t ansible_trusty_onbuild   ubuntu14.04-onbuild
            docker build  -t ansible_stretch_onbuild  debian9-onbuild
            docker build  -t ansible_jessie_onbuild   debian8-onbuild
            docker build  -t ansible_centos7_onbuild  centos7-onbuild
            docker build  -t ansible_alpine3_onbuild  alpine3-onbuild

      - run:
          name: Validating the test results
          command: |
            docker run -i ansible_xenial_onbuild   > result-ubuntu16.04-onbuild
            docker run -i ansible_trusty_onbuild   > result-ubuntu14.04-onbuild
            docker run -i ansible_stretch_onbuild  > result-debian9-onbuild
            docker run -i ansible_jessie_onbuild   > result-debian8-onbuild
            docker run -i ansible_centos7_onbuild  > result-centos7-onbuild
            docker run -i ansible_alpine3_onbuild  > result-alpine3-onbuild

            sh -c "[ -s result-ubuntu16.04-onbuild ]"
            sh -c "[ -s result-ubuntu14.04-onbuild ]"
            sh -c "[ -s result-debian9-onbuild     ]"
            sh -c "[ -s result-debian8-onbuild     ]"
            sh -c "[ -s result-centos7-onbuild     ]"
            sh -c "[ -s result-alpine3-onbuild     ]"

 
  build_mini:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -t ansible_mini_alpine3    mini-alpine3
            docker build  -t ansible_mini_debian9    mini-debian9
            docker build  -t ansible_mini_debian8    mini-debian8

      - run:
          name: Validating the test results
          command: |
            docker build  -t nginx_alpine3   -f mini-test/Dockerfile.alpine3   mini-test
            docker build  -t nginx_debian9   -f mini-test/Dockerfile.debian9   mini-test
            docker build  -t nginx_debian8   -f mini-test/Dockerfile.debian8   mini-test
            docker run -i nginx_alpine3  2> result-nginx-alpine3
            docker run -i nginx_debian9  2> result-nginx-debian9
            docker run -i nginx_debian8  2> result-nginx-debian8

            sh -c "[ -s result-nginx-alpine3     ]"
            sh -c "[ -s result-nginx-debian9     ]"
            sh -c "[ -s result-nginx-debian8     ]"


  build_master:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -t ansible_master_xenial           master-ubuntu16.04
            docker build  -t ansible_master_stretch          master-debian9
            docker build  -t ansible_master_jessie           master-debian8
            docker build  -t ansible_master_centos7          master-centos7

      - run:
          name: Validating the test results
          command: |
            docker run -i ansible_master_xenial           > result-master-ubuntu16.04
            docker run -i ansible_master_stretch          > result-master-debian9
            docker run -i ansible_master_jessie           > result-master-debian8
            docker run -i ansible_master_centos7          > result-master-centos7

            sh -c "[ -s result-master-ubuntu16.04         ]"
            sh -c "[ -s result-master-debian9             ]"
            sh -c "[ -s result-master-debian8             ]"
            sh -c "[ -s result-master-centos7             ]"


  build_master_onbuild:
    working_directory: ~/app
    machine: true
    #docker:
    #  - image: docker:18.06.1-ce
      #- image: docker:18.06.1-ce-git
    steps:
      - checkout
      #- setup_remote_docker:
      #    docker_layer_caching: true
      - run:
          name: build application docker image
          command: |
            docker build  -t ansible_master_xenial_onbuild   master-ubuntu16.04-onbuild
            docker build  -t ansible_master_stretch_onbuild  master-debian9-onbuild
            docker build  -t ansible_master_jessie_onbuild   master-debian8-onbuild
            docker build  -t ansible_master_centos7_onbuild  master-centos7-onbuild

      - run:
          name: Validating the test results
          command: |
            docker run -i ansible_master_xenial_onbuild   > result-master-ubuntu16.04-onbuild
            docker run -i ansible_master_stretch_onbuild  > result-master-debian9-onbuild
            docker run -i ansible_master_jessie_onbuild   > result-master-debian8-onbuild
            docker run -i ansible_master_centos7_onbuild  > result-master-centos7-onbuild

            sh -c "[ -s result-master-ubuntu16.04-onbuild ]"
            sh -c "[ -s result-master-debian9-onbuild     ]"
            sh -c "[ -s result-master-debian8-onbuild     ]"
            sh -c "[ -s result-master-centos7-onbuild     ]"


  build_1.9:
      working_directory: ~/app
      machine: true
      #docker:
      #  - image: docker:18.06.1-ce
        #- image: docker:18.06.1-ce-git
      steps:
        - checkout
        #- setup_remote_docker:
        #    docker_layer_caching: true
        - run:
            name: build application docker image
            command: |
              docker build  -t ansible_1.9_trusty        1.9-ubuntu14.04
              docker build  -t ansible_1.9_jessie        1.9-debian8
              docker build  -t ansible_1.9_alpine3       1.9-alpine3

        - run:
            name: Validating the test results
            command: |
              docker run -i ansible_1.9_trusty           > result-1.9-ubuntu14.04
              docker run -i ansible_1.9_jessie           > result-1.9-debian8
              docker run -i ansible_1.9_alpine3          > result-1.9-alpine3

              sh -c "[ -s result-1.9-ubuntu14.04         ]"
              sh -c "[ -s result-1.9-debian8             ]"
              sh -c "[ -s result-1.9-alpine3             ]"


    #test:
    #  working_directory: ~/app
    #  machine: true
    #  steps:
    #    #- checkout
    #    - run:
    #        name: Validating the test results
    #        command: |
    #          docker run -i json-server  > result
    #          sh -c "[ -s result ]"


  build_1.9_onbuild:
      working_directory: ~/app
      machine: true
      #docker:
      #  - image: docker:18.06.1-ce
        #- image: docker:18.06.1-ce-git
      steps:
        - checkout
        #- setup_remote_docker:
        #    docker_layer_caching: true
        - run:
            name: build application docker image
            command: |
              docker build  -t ansible_1.9_trusty_onbuild   1.9-ubuntu14.04-onbuild
              docker build  -t ansible_1.9_jessie_onbuild   1.9-debian8-onbuild
              docker build  -t ansible_1.9_alpine3_onbuild  1.9-alpine3-onbuild

        - run:
            name: Validating the test results
            command: |
              docker run -i ansible_1.9_trusty_onbuild   > result-1.9-ubuntu14.04-onbuild
              docker run -i ansible_1.9_jessie_onbuild   > result-1.9-debian8-onbuild
              docker run -i ansible_1.9_alpine3_onbuild  > result-1.9-alpine3-onbuild

              sh -c "[ -s result-1.9-ubuntu14.04-onbuild ]"
              sh -c "[ -s result-1.9-debian8-onbuild     ]"
              sh -c "[ -s result-1.9-alpine3-onbuild     ]"


    #test:
    #  working_directory: ~/app
    #  machine: true
    #  steps:
    #    #- checkout
    #    - run:
    #        name: Validating the test results
    #        command: |
    #          docker run -i json-server  > result
    #          sh -c "[ -s result ]"



workflows:
  version: 2
  build_and_test:
    jobs:
      - build_stable
      - build_stable_onbuild
      - build_mini
      - build_1.9
      - build_1.9_onbuild
      - build_master
      - build_master_onbuild
      #- test:
      #    requires:
      #      - build